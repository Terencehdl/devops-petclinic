name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
      - feature/Gitops

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: 'eu-west-3'
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven 

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Unit Tests
        run: mvn --batch-mode --errors --fail-at-end --show-version  test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest 
        run: |
          docker push 969799237091.dkr.ecr.eu-west-3.amazonaws.com/devops-petclinic/discovery-server
          # services=("config-server" "discovery-server" "customers-service" "visits-service" "vets-service" "api-gateway" "admin-server" )
          # for service in "${services[@]}"; do
          #   if [[ $(docker-compose config | grep "image:.*$service") == "" ]]; then
          #     # Service ne possédant pas d'image définie, on le construit et pousse
          #     echo "Building and pushing image for $service"
          #     docker-compose build $service
          #     echo "Tagging image for $service"
          #     docker-compose tag $service:latest ${{ secrets.ECR_REPOSITORY }}/$service:${IMAGE_TAG}
          #     echo "Pushing image to ECR for $service"
          #     docker-compose push ${{ secrets.ECR_REPOSITORY }}/$service:${IMAGE_TAG}
          #   else
          #     echo "Service $service uses a predefined image, skipping build"
          #   fi
          # done
